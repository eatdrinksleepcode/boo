#!/bin/sh

set -e

source ./build-tools/versions
MONO_VERSION=${1:-Current}

cat >./.config-build <<EOL
source ./build-tools/versions
export MONO_VERSION=${MONO_VERSION}
export MONO_DIR=/Library/Frameworks/Mono.framework/Versions/\${MONO_VERSION}
export MONO_BIN_DIR=\${MONO_DIR}/bin
export MONO_PATH=\${MONO_BIN_DIR}/mono
export PKG_CONFIG_PATH=\${MONO_DIR}/lib/pkgconfig/
export BUILD_TOOLS_DIR=./build-tools/tools
EOL

source ./.config-build

mkdir -p ${BUILD_TOOLS_DIR}
cd ${BUILD_TOOLS_DIR}

download_if_missing() {
    url=$1
    file_path=$2
    if [ ! -e "${file_path}" ]
    then
        echo "Downloading ${url} to ${file_path}"
        if [ $(which wget) ]
        then
            wget -nv --no-check-certificate "${url}" -O "${file_path}"
        else
            curl --fail -L -o "${file_path}" "${url}"
        fi
    fi
}

# Fetch a version of NAnt compatible with Mono 3

NANT_DOWNLOAD_FILE_NAME=${NANT_COMMIT}.zip
NANT_DOWNLOAD_FILE_PATH="${NANT_DOWNLOAD_FILE_NAME}"
NANT_URL=https://github.com/nant/nant/archive/${NANT_DOWNLOAD_FILE_NAME}

download_if_missing "${NANT_URL}" "${NANT_DOWNLOAD_FILE_PATH}"
unzip -qq -o "${NANT_DOWNLOAD_FILE_PATH}"

rm -rf nant
cd "nant-${NANT_COMMIT}"
# On Mono 4.x the gmcs command is no longer present
PATH=$PATH:${MONO_BIN_DIR} make MCS=${MONO_BIN_DIR}/mcs setup bootstrap/NAnt.exe bootstrap/NAnt.Core.dll bootstrap/NAnt.DotNetTasks.dll
cp -r bootstrap ../nant
cd -
rm -r "nant-${NANT_COMMIT}"

# Fetch a recent version of NUnit

NUNIT_DOWNLOAD_FILE_NAME=NUnit-${NUNIT_VERSION}.zip
NUNIT_DOWNLOAD_FILE_PATH=${NUNIT_DOWNLOAD_FILE_NAME}
NUNIT_URL=https://launchpad.net/nunitv2/trunk/${NUNIT_VERSION}/+download/${NUNIT_DOWNLOAD_FILE_NAME}

download_if_missing "${NUNIT_URL}" "${NUNIT_DOWNLOAD_FILE_PATH}"
unzip -qq -o "${NUNIT_DOWNLOAD_FILE_PATH}"
